# apiVersion: v1
# kind: Namespace
# metadata:
#   name: game-2048
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: game-2048
#   name: deployment-2048
# spec:
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: app-2048
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: app-2048
#     spec:
#       containers:
#       - image: 853931821519.dkr.ecr.us-east-1.amazonaws.com/devsecops-rac3-registry:2048
#         imagePullPolicy: Always
#         name: app-2048
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: game-2048
#   name: service-2048
# spec:
#   type: LoadBalancer
#   selector:
#     app.kubernetes.io/name: app-2048
#   ports:
#     - name: 2048-game
#       port: 8080
#       targetPort: 80
#       protocol: TCP
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: game-2048
#   name: ingress-2048
#   annotations:
#     ingress.kubernetes.io/ssl-redirect: "true"
# spec:
#   ingressClassName: alb
#   rules:
#     - host: ad-rac3.axle-interns.com
#     - http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: service-2048
#               port:
#                 number: 80
# # ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: game-2048
#   name: ingress-2048
# spec:
#   defaultBackend:
#     service:
#       name: service-2048
#       port:
#         number: 80
#--------------
# apiVersion: v1
# kind: Service
# metadata:
#   name: service-2048
#   labels:
#     app: game-2048
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#   selector:
#     app: game-2048
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: my-game
#   labels:
#     app: game-2048
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: game-2048
#   template:
#     metadata:
#       labels:
#         app: game-2048
#     spec:
#       containers:
#       - name: my-game
#         image: 853931821519.dkr.ecr.us-east-1.amazonaws.com/devsecops-rac3-registry:2048
#         ports:
#         - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  template:
    metadata:
      labels:
        tag: nginx-example
    spec:
      containers:
      - name: nginix
        image: public.ecr.aws/nginx/nginx:stable-perl
        imagePullPolicy: Always
  replicas: 1
  selector:
      matchLabels:
          tag: nginix-example
---
apiVersion: v1
kind: Service
metadata:
  name: nginix-lb
spec:
  type: LoadBalancer
  selector: 
    tag: lb-nginix
  ports:
  - name: port-nginix
    port: 8080
    targetPort: 80
    protocol: TCP

